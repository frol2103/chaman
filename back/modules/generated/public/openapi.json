{
  "openapi" : "3.0.1",
  "info" : {
    "license" : {
      "name" : "Apache 2.0",
      "url" : "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "title" : "Chaman",
    "version" : "1.0.0"
  },
  "servers" : [ {
    "url" : "https://chaman.frol.be/api"
  }, {
    "url" : "http://chaman.frol.be/api"
  } ],
  "tags" : [ {
    "description" : "Field information",
    "name" : "field"
  }, {
    "description" : "complete item form",
    "name" : "item"
  } ],
  "paths" : {
    "/field" : {
      "get" : {
        "operationId" : "getField",
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "items" : {
                    "$ref" : "#/components/schemas/Field"
                  },
                  "type" : "array"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get a field",
        "tags" : [ "field" ]
      },
      "post" : {
        "operationId" : "createField",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/FieldConfig"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Field"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "create a field",
        "tags" : [ "field" ]
      }
    },
    "/field/{uuid}" : {
      "delete" : {
        "operationId" : "deleteField",
        "parameters" : [ {
          "explode" : false,
          "in" : "path",
          "name" : "uuid",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "200" : {
            "content" : { },
            "description" : "OK"
          }
        },
        "summary" : "delete a field",
        "tags" : [ "field" ]
      },
      "get" : {
        "operationId" : "getFieldConfig",
        "parameters" : [ {
          "explode" : false,
          "in" : "path",
          "name" : "uuid",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FieldConfig"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "get a field config",
        "tags" : [ "field" ]
      },
      "put" : {
        "operationId" : "updateField",
        "parameters" : [ {
          "explode" : false,
          "in" : "path",
          "name" : "uuid",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/FieldConfig"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Field"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "update a field",
        "tags" : [ "field" ]
      }
    },
    "/data-types/" : {
      "get" : {
        "operationId" : "getDataTypes",
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "items" : {
                    "$ref" : "#/components/schemas/FieldConfig"
                  },
                  "type" : "array"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "get data type",
        "tags" : [ "datatypes" ]
      }
    },
    "/item" : {
      "get" : {
        "operationId" : "getItems",
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "items" : {
                    "$ref" : "#/components/schemas/Item"
                  },
                  "type" : "array"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "Get all items",
        "tags" : [ "item" ]
      },
      "post" : {
        "operationId" : "createItem",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Item"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Item"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "create an item",
        "tags" : [ "item" ]
      }
    },
    "/item/{uuid}" : {
      "delete" : {
        "operationId" : "deleteItem",
        "parameters" : [ {
          "explode" : false,
          "in" : "path",
          "name" : "uuid",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "200" : {
            "content" : { },
            "description" : "OK"
          }
        },
        "summary" : "delete a item",
        "tags" : [ "item" ]
      },
      "get" : {
        "operationId" : "getItem",
        "parameters" : [ {
          "explode" : false,
          "in" : "path",
          "name" : "uuid",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Item"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "get a item",
        "tags" : [ "item" ]
      },
      "put" : {
        "operationId" : "updateItem",
        "parameters" : [ {
          "explode" : false,
          "in" : "path",
          "name" : "uuid",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Item"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Item"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "update a item",
        "tags" : [ "item" ]
      }
    },
    "/item/{uuid}/annex" : {
      "post" : {
        "operationId" : "uploadFile",
        "parameters" : [ {
          "explode" : false,
          "in" : "path",
          "name" : "uuid",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/inline_object",
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "properties" : {
                  "file" : {
                    "format" : "binary",
                    "type" : "string"
                  }
                },
                "type" : "object"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/definitions/Annex"
                }
              }
            },
            "description" : "OK"
          }
        },
        "summary" : "upload a file",
        "tags" : [ "annex" ]
      }
    },
    "/annex/{uuid}/delete" : {
      "post" : {
        "operationId" : "deleteAnnex",
        "parameters" : [ {
          "explode" : false,
          "in" : "path",
          "name" : "uuid",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          }
        },
        "summary" : "deleta an annex",
        "tags" : [ "annex" ]
      }
    }
  },
  "components" : {
    "requestBodies" : {
      "inline_object" : {
        "content" : {
          "multipart/form-data" : {
            "schema" : {
              "$ref" : "#/components/schemas/inline_object"
            }
          }
        }
      }
    },
    "schemas" : {
      "FieldType" : {
        "properties" : {
          "identifier" : {
            "type" : "string"
          }
        },
        "required" : [ "identifier" ],
        "type" : "object"
      },
      "Field" : {
        "example" : {
          "reference" : "reference",
          "errorMessages" : [ "errorMessages", "errorMessages" ],
          "inputType" : "inputType",
          "label" : "label",
          "params" : "",
          "uuid" : "uuid",
          "value" : [ {
            "uuid" : "uuid",
            "value" : ""
          }, {
            "uuid" : "uuid",
            "value" : ""
          } ]
        },
        "properties" : {
          "uuid" : {
            "description" : "single uuid acrross all version of the field",
            "type" : "string"
          },
          "label" : {
            "type" : "string"
          },
          "reference" : {
            "type" : "string"
          },
          "inputType" : {
            "type" : "string"
          },
          "value" : {
            "items" : {
              "$ref" : "#/components/schemas/FieldValue"
            },
            "type" : "array"
          },
          "params" : { },
          "errorMessages" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "FieldConfig" : {
        "example" : {
          "reference" : "reference",
          "datatype" : "datatype",
          "label" : "label",
          "config" : [ {
            "reference" : "reference",
            "errorMessages" : [ "errorMessages", "errorMessages" ],
            "inputType" : "inputType",
            "label" : "label",
            "params" : "",
            "uuid" : "uuid",
            "value" : [ {
              "uuid" : "uuid",
              "value" : ""
            }, {
              "uuid" : "uuid",
              "value" : ""
            } ]
          }, {
            "reference" : "reference",
            "errorMessages" : [ "errorMessages", "errorMessages" ],
            "inputType" : "inputType",
            "label" : "label",
            "params" : "",
            "uuid" : "uuid",
            "value" : [ {
              "uuid" : "uuid",
              "value" : ""
            }, {
              "uuid" : "uuid",
              "value" : ""
            } ]
          } ]
        },
        "properties" : {
          "label" : {
            "type" : "string"
          },
          "reference" : {
            "type" : "string"
          },
          "datatype" : {
            "type" : "string"
          },
          "config" : {
            "items" : {
              "$ref" : "#/components/schemas/Field"
            },
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "FieldValue" : {
        "example" : {
          "uuid" : "uuid",
          "value" : ""
        },
        "properties" : {
          "uuid" : {
            "description" : "identifier of the value",
            "type" : "string"
          },
          "value" : { }
        },
        "type" : "object"
      },
      "Item" : {
        "example" : {
          "description" : "description",
          "title" : "title",
          "uuid" : "uuid",
          "annexes" : [ {
            "filename" : "filename",
            "mime" : "mime",
            "uuid" : "uuid"
          }, {
            "filename" : "filename",
            "mime" : "mime",
            "uuid" : "uuid"
          } ],
          "content" : [ {
            "reference" : "reference",
            "errorMessages" : [ "errorMessages", "errorMessages" ],
            "inputType" : "inputType",
            "label" : "label",
            "params" : "",
            "uuid" : "uuid",
            "value" : [ {
              "uuid" : "uuid",
              "value" : ""
            }, {
              "uuid" : "uuid",
              "value" : ""
            } ]
          }, {
            "reference" : "reference",
            "errorMessages" : [ "errorMessages", "errorMessages" ],
            "inputType" : "inputType",
            "label" : "label",
            "params" : "",
            "uuid" : "uuid",
            "value" : [ {
              "uuid" : "uuid",
              "value" : ""
            }, {
              "uuid" : "uuid",
              "value" : ""
            } ]
          } ]
        },
        "properties" : {
          "uuid" : {
            "type" : "string"
          },
          "title" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "content" : {
            "items" : {
              "$ref" : "#/components/schemas/Field"
            },
            "type" : "array"
          },
          "annexes" : {
            "items" : {
              "$ref" : "#/components/schemas/Annex"
            },
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "Annex" : {
        "example" : {
          "filename" : "filename",
          "mime" : "mime",
          "uuid" : "uuid"
        },
        "properties" : {
          "uuid" : {
            "type" : "string"
          },
          "filename" : {
            "type" : "string"
          },
          "mime" : {
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "inline_object" : {
        "properties" : {
          "file" : {
            "format" : "binary",
            "type" : "string"
          }
        },
        "type" : "object"
      }
    }
  }
}