swagger: "2.0"
info:
  description: ""
  version: "1.0.0"
  title: "Chaman"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "chaman.frol.be"
basePath: "/api"
tags:
  - name: "field"
    description: "Field information"
  - name: "item"
    description: "complete item form"
schemes:
  - "https"
  - "http"

paths:
  /field:
    get:
      tags:
        - "field"
      summary: "Get a field"
      description: ""
      operationId: "getField"
      produces:
        - "application/json"
      responses:
        "200":
          description: "OK"
          schema:
            type: array
            items:
              $ref: "#/definitions/Field"
    post:
      tags:
        - "field"
      summary: "create a field"
      description: ""
      operationId: "createField"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "field"
          required: true
          schema:
            $ref : "#/definitions/Field"
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/Field"

  /field/{uuid}:
    put:
      tags:
        - "field"
      summary: "update a field"
      description: ""
      operationId: "updateField"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "path"
          name: "uuid"
          required: true
          type: string
        - in: "body"
          name: "field"
          required: true
          schema:
            $ref : "#/definitions/Field"
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/Field"

    delete:
      tags:
        - "field"
      summary: "delete a field"
      description: ""
      operationId: "deleteField"
      parameters:
        - in: "path"
          name: "uuid"
          required: true
          type: string
      responses:
        "200":
          description: "OK"

  /data-types/:
    get:
      tags:
        - "datatypes"
      summary: "get data type"
      description: ""
      operationId: "getDataTypes"
      produces:
        - "application/json"
      responses:
        "200":
          description: "OK"
          schema:
            type: array
            items:
              $ref: "#/definitions/FieldType"

  /item:
    get:
      tags:
        - "item"
      summary: "Get all items"
      description: ""
      operationId: "getItems"
      produces:
        - "application/json"
      responses:
        "200":
          description: "OK"
          schema:
            type: array
            items:
              $ref: "#/definitions/Item"
    post:
      tags:
        - "item"
      summary: "create an item"
      description: ""
      operationId: "createItem"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "item"
          required: true
          schema:
            $ref : "#/definitions/Item"
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/Item"

  /item/{uuid}:
    get:
      tags:
        - "item"
      summary: "get a item"
      description: ""
      operationId: "getItem"
      produces:
        - "application/json"
      parameters:
        - in: "path"
          name: "uuid"
          required: true
          type: string
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/Item"

    delete:
      tags:
        - "item"
      summary: "delete a item"
      description: ""
      operationId: "deleteItem"
      parameters:
        - in: "path"
          name: "uuid"
          required: true
          type: string
      responses:
        "200":
          description: "OK"

    put:
      tags:
        - "item"
      summary: "update a item"
      description: ""
      operationId: "updateItem"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "path"
          name: "uuid"
          required: true
          type: string
        - in: "body"
          name: "item"
          required: true
          schema:
            $ref : "#/definitions/Item"
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/Item"

definitions:
  FieldType:
    type: "object"
    required:
      - identifier
    properties:
      identifier:
        type: "string"

  Field:
    type: "object"
    properties:
      uuid:
        type: "string"
        description: "single uuid acrross all version of the field"
      label:
        type: "string"
      reference:
        type: "string"
      dataType:
        type: "string"
      value:
        type: array
        items:
          $ref: "#/definitions/FieldValue"

  FieldValue:
    type: "object"
    properties:
      uuid:
        type: "string"
        description: "identifier of the value"
      value:
        description: "value"

  Item:
    type: "object"
    properties:
      uuid:
        type: string
      title:
        type: string
      description:
        type: string
      content:
        type: array
        items:
          $ref: "#/definitions/Field"
